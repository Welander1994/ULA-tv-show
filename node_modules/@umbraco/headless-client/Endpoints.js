"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Endpoints = void 0;
var Endpoint_1 = require("./Endpoint");
/**
 * @internal
 */
exports.Endpoints = {
    delivery: {
        content: {
            root: function (options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/content', {}, 'get', options); },
            byId: function (id, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/content/{id}', { id: id }, 'get', options); },
            byUrl: function (url, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/content/url?url={url}', { url: url }, 'get', options); },
            children: function (id, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/content/{id}/children', { id: id }, 'get', options); },
            ancestors: function (id, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/content/{id}/ancestors', { id: id }, 'get', options); },
            descendants: function (id, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/content/{id}/descendants', { id: id }, 'get', options); },
            byContentType: function (contentType, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/content/type?contentType={contentType}', { contentType: contentType }, 'get', options); },
            filter: function (options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/content/filter', {}, 'post', options); },
            search: function (term, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/content/search?term={term}', { term: term }, 'get', options); }
        },
        media: {
            root: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/media', {}, 'get'); },
            byId: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/media/{id}', { id: id }, 'get'); },
            children: function (id, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/media/{id}/children', { id: id }, 'get', options); }
        },
        redirect: {
            getAll: function (options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/redirect', {}, 'get', options); },
        }
    },
    management: {
        content: {
            root: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/content', {}, 'get'); },
            byId: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/content/{id}', { id: id }, 'get'); },
            children: function (id, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/content/{id}/children', { id: id }, 'get', options); },
            create: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/content', {}, 'post'); },
            publish: function (id, options) {
                return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/content/{id}/publish', { id: id }, 'put', options);
            },
            unPublish: function (id, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/content/{id}/unpublish', { id: id }, 'put', options); },
            update: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/content/{id}', { id: id }, 'put'); },
            delete: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/content/{id}', { id: id }, 'delete'); }
        },
        contentType: {
            all: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/content/type', {}, 'get'); },
            byAlias: function (alias) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/content/type/{alias}', { alias: alias }, 'get'); }
        },
        media: {
            root: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/media', {}, 'get'); },
            byId: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/media/{id}', { id: id }, 'get'); },
            children: function (id, options) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/media/{id}/children', { id: id }, 'get', options); },
            create: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/media', {}, 'post'); },
            update: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/media/{id}', { id: id }, 'put'); },
            delete: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/media/{id}', { id: id }, 'delete'); }
        },
        mediaType: {
            all: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/media/type', {}, 'get'); },
            byAlias: function (alias) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/media/type/{alias}', { alias: alias }, 'get'); }
        },
        language: {
            all: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/language', {}, 'get'); },
            byISOCode: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/language/{id}', { id: id }, 'get'); },
            create: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/language', {}, 'post'); },
            update: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/language/{id}', { id: id }, 'put'); },
            delete: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/language/{id}', { id: id }, 'delete'); }
        },
        relation: {
            byId: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/relation/{id}', { id: id }, 'get'); },
            byParent: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/relation/parent/{id}', { id: id }, 'get'); },
            byChild: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/relation/child/{id}', { id: id }, 'get'); },
            byAlias: function (alias) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/relation/{alias}', { alias: alias }, 'get'); },
            create: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/relation', {}, 'post'); },
            delete: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/relation/{id}', { id: id }, 'delete'); }
        },
        relationType: {
            byAlias: function (alias) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/relation/type/{alias}', { alias: alias }, 'get'); }
        },
        member: {
            byUsername: function (username) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/{username}', { username: username }, 'get'); },
            create: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member', {}, 'post'); },
            update: function (username) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/{username}', { username: username }, 'put'); },
            addGroup: function (username, group) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/{username}/groups/{group}', { username: username, group: group }, 'put'); },
            removeGroup: function (username, group) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/{username}/groups/{group}', { username: username, group: group }, 'delete'); },
            delete: function (username) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/{username}', { username: username }, 'delete'); },
            changePassword: function (username) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/{username}/password', { username: username }, 'POST'); },
            createResetPasswordToken: function (username) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/{username}/password/reset-token', { username: username }, 'GET'); },
            resetPassword: function (username) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/{username}/password/reset', { username: username }, 'POST'); }
        },
        memberGroup: {
            byName: function (name) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/group/{name}', { name: name }, 'get'); },
            create: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/group', {}, 'post'); },
            delete: function (name) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/group/{name}', { name: name }, 'delete'); }
        },
        memberType: {
            all: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/type', {}, 'get'); },
            byAlias: function (alias) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/member/type/{alias}', { alias: alias }, 'get'); }
        },
        forms: {
            all: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/forms', {}, 'get'); },
            byId: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/forms/{id}', { id: id }, 'get'); },
            submitEntry: function (id) { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/forms/{id}/entries', { id: id }, 'post'); }
        }
    },
    authentication: {
        member: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.CDN, '/member/oauth/token', {}, 'POST'); },
        user: function () { return new Endpoint_1.Endpoint(Endpoint_1.EndpointSource.ContentManagement, '/oauth/token', {}, 'POST'); }
    }
};
//# sourceMappingURL=data:application/json;base64,