"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormFieldIndicationType = exports.FormConditionActionType = exports.FormConditionLogicType = exports.FormConditionRuleOperatorType = void 0;
/**
 * @public
 */
var FormConditionRuleOperatorType;
(function (FormConditionRuleOperatorType) {
    FormConditionRuleOperatorType["Is"] = "IS";
    FormConditionRuleOperatorType["IsNot"] = "IS_NOT";
    FormConditionRuleOperatorType["GreaterThen"] = "GREATER_THEN";
    FormConditionRuleOperatorType["LessThen"] = "LESS_THEN";
    FormConditionRuleOperatorType["Contains"] = "CONTAINS";
    FormConditionRuleOperatorType["StartsWith"] = "STARTS_WITH";
    FormConditionRuleOperatorType["EndsWith"] = "ENDS_WITH";
})(FormConditionRuleOperatorType = exports.FormConditionRuleOperatorType || (exports.FormConditionRuleOperatorType = {}));
/**
 * @public
 */
var FormConditionLogicType;
(function (FormConditionLogicType) {
    FormConditionLogicType["All"] = "ALL";
    FormConditionLogicType["Any"] = "ANY";
})(FormConditionLogicType = exports.FormConditionLogicType || (exports.FormConditionLogicType = {}));
/**
 * @public
 */
var FormConditionActionType;
(function (FormConditionActionType) {
    FormConditionActionType["Show"] = "SHOW";
    FormConditionActionType["Hide"] = "HIDE";
})(FormConditionActionType = exports.FormConditionActionType || (exports.FormConditionActionType = {}));
/**
 * @public
 */
var FormFieldIndicationType;
(function (FormFieldIndicationType) {
    FormFieldIndicationType["NoIndicator"] = "NO_INDICATOR";
    FormFieldIndicationType["MarkMandatoryFields"] = "MARK_MANDATORY_FIELDS";
    FormFieldIndicationType["MarkOptionalFields"] = "MARK_OPTIONAL_FIELDS";
})(FormFieldIndicationType = exports.FormFieldIndicationType || (exports.FormFieldIndicationType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRm9ybS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9SZXNwb25zZXMvRm9ybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFTQTs7R0FFRztBQUNILElBQVksNkJBUVg7QUFSRCxXQUFZLDZCQUE2QjtJQUN2QywwQ0FBUyxDQUFBO0lBQ1QsaURBQWdCLENBQUE7SUFDaEIsNkRBQTRCLENBQUE7SUFDNUIsdURBQXNCLENBQUE7SUFDdEIsc0RBQXFCLENBQUE7SUFDckIsMkRBQTBCLENBQUE7SUFDMUIsdURBQXNCLENBQUE7QUFDeEIsQ0FBQyxFQVJXLDZCQUE2QixHQUE3QixxQ0FBNkIsS0FBN0IscUNBQTZCLFFBUXhDO0FBV0Q7O0dBRUc7QUFDSCxJQUFZLHNCQUdYO0FBSEQsV0FBWSxzQkFBc0I7SUFDaEMscUNBQVcsQ0FBQTtJQUNYLHFDQUFXLENBQUE7QUFDYixDQUFDLEVBSFcsc0JBQXNCLEdBQXRCLDhCQUFzQixLQUF0Qiw4QkFBc0IsUUFHakM7QUFFRDs7R0FFRztBQUNILElBQVksdUJBR1g7QUFIRCxXQUFZLHVCQUF1QjtJQUNqQyx3Q0FBYSxDQUFBO0lBQ2Isd0NBQWEsQ0FBQTtBQUNmLENBQUMsRUFIVyx1QkFBdUIsR0FBdkIsK0JBQXVCLEtBQXZCLCtCQUF1QixRQUdsQztBQTZERDs7R0FFRztBQUNILElBQVksdUJBSVg7QUFKRCxXQUFZLHVCQUF1QjtJQUNqQyx1REFBNEIsQ0FBQTtJQUM1Qix3RUFBNkMsQ0FBQTtJQUM3QyxzRUFBMkMsQ0FBQTtBQUM3QyxDQUFDLEVBSlcsdUJBQXVCLEdBQXZCLCtCQUF1QixLQUF2QiwrQkFBdUIsUUFJbEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBGb3JtQ29uZGl0aW9uUnVsZSB7XG4gIGZpZWxkOiBzdHJpbmdcbiAgb3BlcmF0b3I6IEZvcm1Db25kaXRpb25SdWxlT3BlcmF0b3JUeXBlXG4gIHZhbHVlOiBzdHJpbmdcbn1cblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBlbnVtIEZvcm1Db25kaXRpb25SdWxlT3BlcmF0b3JUeXBlIHtcbiAgSXMgPSAnSVMnLFxuICBJc05vdCA9ICdJU19OT1QnLFxuICBHcmVhdGVyVGhlbiA9ICdHUkVBVEVSX1RIRU4nLFxuICBMZXNzVGhlbiA9ICdMRVNTX1RIRU4nLFxuICBDb250YWlucyA9ICdDT05UQUlOUycsXG4gIFN0YXJ0c1dpdGggPSAnU1RBUlRTX1dJVEgnLFxuICBFbmRzV2l0aCA9ICdFTkRTX1dJVEgnXG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1Db25kaXRpb24ge1xuICBhY3Rpb25UeXBlOiBGb3JtQ29uZGl0aW9uQWN0aW9uVHlwZVxuICBsb2dpY1R5cGU6IEZvcm1Db25kaXRpb25Mb2dpY1R5cGVcbiAgcnVsZXM6IEZvcm1Db25kaXRpb25SdWxlW11cbn1cblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBlbnVtIEZvcm1Db25kaXRpb25Mb2dpY1R5cGUge1xuICBBbGwgPSAnQUxMJyxcbiAgQW55ID0gJ0FOWSdcbn1cblxuLyoqXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCBlbnVtIEZvcm1Db25kaXRpb25BY3Rpb25UeXBlIHtcbiAgU2hvdyA9ICdTSE9XJyxcbiAgSGlkZSA9ICdISURFJ1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBGb3JtRmllbGQge1xuICBjYXB0aW9uOiBzdHJpbmdcbiAgYWxpYXM6IHN0cmluZ1xuICByZXF1aXJlZDogYm9vbGVhblxuICByZXF1aXJlZEVycm9yTWVzc2FnZT86IHN0cmluZ1xuICBzZXR0aW5nczogb2JqZWN0XG4gIHR5cGU6IHN0cmluZ1xuICBwcmVWYWx1ZXM/OiBbXVxuICBoZWxwVGV4dD86IHN0cmluZ1xuICBjb25kaXRpb24/OiBGb3JtQ29uZGl0aW9uXG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1Db2x1bW4ge1xuICB3aWR0aDogbnVtYmVyXG4gIGZpZWxkczogRm9ybUZpZWxkW11cbiAgY2FwdGlvbj86IHN0cmluZ1xufVxuXG4vKipcbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBGb3JtRmllbGRzZXQge1xuICBjb2x1bW5zOiBGb3JtQ29sdW1uW11cbiAgY2FwdGlvbj86IHN0cmluZ1xuICBjb25kaXRpb24/OiBGb3JtQ29uZGl0aW9uXG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1QYWdlIHtcbiAgZmllbGRzZXRzOiBGb3JtRmllbGRzZXRbXVxuICBjYXB0aW9uPzogc3RyaW5nXG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEZvcm0ge1xuICBfaWQ6IHN0cmluZ1xuICBpbmRpY2F0b3I/OiBzdHJpbmdcbiAgbmFtZT86IHN0cmluZ1xuICBuZXh0TGFiZWw/OiBzdHJpbmdcbiAgcHJldmlvdXNMYWJlbD86IHN0cmluZ1xuICBzdWJtaXRMYWJlbD86IHN0cmluZ1xuICBkaXNhYmxlRGVmYXVsdFN0eWxlc2hlZXQ6IGJvb2xlYW5cbiAgZmllbGRJbmRpY2F0aW9uVHlwZTogRm9ybUZpZWxkSW5kaWNhdGlvblR5cGVcbiAgaGlkZUZpZWxkVmFsaWRhdGlvbjogYm9vbGVhblxuICBtZXNzYWdlT25TdWJtaXQ/OiBzdHJpbmdcbiAgc2hvd1ZhbGlkYXRpb25TdW1tYXJ5OiBib29sZWFuXG4gIHBhZ2VzOiBGb3JtUGFnZVtdXG59XG5cbi8qKlxuICogQHB1YmxpY1xuICovXG5leHBvcnQgZW51bSBGb3JtRmllbGRJbmRpY2F0aW9uVHlwZSB7XG4gIE5vSW5kaWNhdG9yID0gJ05PX0lORElDQVRPUicsXG4gIE1hcmtNYW5kYXRvcnlGaWVsZHMgPSAnTUFSS19NQU5EQVRPUllfRklFTERTJyxcbiAgTWFya09wdGlvbmFsRmllbGRzID0gJ01BUktfT1BUSU9OQUxfRklFTERTJ1xufVxuIl19