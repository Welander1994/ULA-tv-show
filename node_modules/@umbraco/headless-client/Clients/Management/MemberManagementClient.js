"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MemberManagementClient = void 0;
var Endpoints_1 = require("../../Endpoints");
/**
 * MemberManagementClient is used to access the Member part of the Content Management API.
 * @public
 *
 * @example
 * The {@link MemberManagementClient} must be accessed through {@link Client}.
 *
 * ```typescript
 * import { Client } from '@umbraco/headless-client'
 *
 * const client = new Client({
 *  projectAlias: '<your-project-alias>',
 *  apiKey: '<your-api-key>',
 *  language: '<iso-code>',
 * })
 *
 * const memberClient = client.management.member
 * ```
 */
var MemberManagementClient = /** @class */ (function () {
    /**
     * @internal
     */
    function MemberManagementClient(client) {
        var _this = this;
        this.client = client;
        this.makeRequest = function (endpoint, data) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.client.makeRequest(endpoint, data)];
            });
        }); };
    }
    /**
     * Find member by membername.
     * @param username - Username for the member querying for.
     * @returns a `Promise` that resolves to a {@link ContentManagementMember} if found, otherwise `undefined`.
     */
    MemberManagementClient.prototype.byUsername = function (username) {
        return __awaiter(this, void 0, void 0, function () {
            var err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(Endpoints_1.Endpoints.management.member.byUsername(username))];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_1 = _a.sent();
                        if (err_1.response && err_1.response.status === 404) {
                            return [2 /*return*/, undefined];
                        }
                        throw err_1;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Create a new member.
     * @param data - Data for creating a new member.
     * @returns a `Promise` that resolves to the newly created {@link ContentManagementMember}.
     */
    MemberManagementClient.prototype.create = function (data) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.makeRequest(Endpoints_1.Endpoints.management.member.create(), data)];
            });
        });
    };
    /**
     * Update member by username.
     * @param username - Username for the member to be updated.
     * @param data - Data for the member to be updated.
     * @returns a `Promise` that resolves to a {@link ContentManagementMember} of the updated Member item if found, otherwise `undefined`.
     */
    MemberManagementClient.prototype.update = function (username, data) {
        return __awaiter(this, void 0, void 0, function () {
            var err_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(Endpoints_1.Endpoints.management.member.update(username), data)];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_2 = _a.sent();
                        if (err_2.response && err_2.response.status === 404) {
                            return [2 /*return*/, undefined];
                        }
                        throw err_2;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Add member to group.
     * @deprecated Use {@link MemberManagementClient.addToGroup | addToGroup()} instead.
     * @param username - Username of the member.
     * @param group - Name of the group the member should be added to.
     */
    MemberManagementClient.prototype.addGroup = function (username, group) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.addToGroup(username, group)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Add member to group.
     * @param username - Username of the member.
     * @param group - Name of the group the member should be added to.
     */
    MemberManagementClient.prototype.addToGroup = function (username, groupName) {
        return __awaiter(this, void 0, void 0, function () {
            var err_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(Endpoints_1.Endpoints.management.member.addGroup(username, groupName))];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        err_3 = _a.sent();
                        if (err_3.response && err_3.response.status === 404) {
                            return [2 /*return*/, undefined];
                        }
                        throw err_3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Remove member from group.
     * @deprecated Use {@link MemberManagementClient.removeFromGroup | removeFromGroup()} instead.
     * @param username - Username of the member.
     * @param group - Name of the group the member should be removed from.
     */
    MemberManagementClient.prototype.removeGroup = function (username, group) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.removeFromGroup(username, group)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Remove member from group.
     * @param username - Username of the member.
     * @param group - Name of the group the member should be removed from.
     */
    MemberManagementClient.prototype.removeFromGroup = function (username, groupName) {
        return __awaiter(this, void 0, void 0, function () {
            var err_4;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(Endpoints_1.Endpoints.management.member.removeGroup(username, groupName))];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        err_4 = _a.sent();
                        if (err_4.response && err_4.response.status === 404) {
                            return [2 /*return*/, undefined];
                        }
                        throw err_4;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Delete a member.
     * @param username - Username for the member that needs to be deleted.
     */
    MemberManagementClient.prototype.delete = function (username) {
        return __awaiter(this, void 0, void 0, function () {
            var err_5;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(Endpoints_1.Endpoints.management.member.delete(username))];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_5 = _a.sent();
                        if (err_5.response && err_5.response.status === 404) {
                            return [2 /*return*/, undefined];
                        }
                        throw err_5;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Change a members password.
     * @param username - Username for the member.
     * @param currentPassword - The current password.
     * @param newPassword - The new password.
     * @returns a `Promise` that resolves to a {@link ContentManagementMember} if found and password is updated, otherwise `undefined`.
     */
    MemberManagementClient.prototype.changePassword = function (username, currentPassword, newPassword) {
        return __awaiter(this, void 0, void 0, function () {
            var err_6;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(Endpoints_1.Endpoints.management.member.changePassword(username), { currentPassword: currentPassword, newPassword: newPassword })];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_6 = _a.sent();
                        if (err_6.response && err_6.response.status === 404) {
                            return [2 /*return*/, undefined];
                        }
                        throw err_6;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Create a reset tokon that can be used to reset the members password.
     * @param username - Username for the member.
     * @returns a `Promise` that resolves to a {@link MemberResetPasswordToken} if found, otherwise `undefined`.
     */
    MemberManagementClient.prototype.createResetPasswordToken = function (username) {
        return __awaiter(this, void 0, void 0, function () {
            var err_7;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(Endpoints_1.Endpoints.management.member.createResetPasswordToken(username))];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_7 = _a.sent();
                        if (err_7.response && err_7.response.status === 404) {
                            return [2 /*return*/, undefined];
                        }
                        throw err_7;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Resets the members password using a reset token obtained via. {@link MemberManagementClient.createResetPasswordToken | createResetPasswordToken()}.
     * @param username - Username for the member.
     * @param token - The password reset token.
     * @param newPassword - The new password.
     * @returns a `Promise` that resolves to a {@link ContentManagementMember} if found and password is updated, otherwise `undefined`.
     */
    MemberManagementClient.prototype.resetPassword = function (username, token, newPassword) {
        return __awaiter(this, void 0, void 0, function () {
            var err_8;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(Endpoints_1.Endpoints.management.member.resetPassword(username), { token: token, newPassword: newPassword })];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_8 = _a.sent();
                        if (err_8.response && err_8.response.status === 404) {
                            return [2 /*return*/, undefined];
                        }
                        throw err_8;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return MemberManagementClient;
}());
exports.MemberManagementClient = MemberManagementClient;
//# sourceMappingURL=data:application/json;base64,